{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","sortByType","setState","handleReverseClick","handleResetClick","this","visibleGoods","sort","previousGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetVisible","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCfQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDHAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,WAAa,SAACF,GACZ,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,mBAAqB,WACnB,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,iBAAmB,WACjB,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdP,EAtDH,SACLA,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAezB,OAbAc,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQV,GACN,KAAKT,EAASoB,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAKnB,EAASsB,OACZ,OAAOJ,EAAaK,OAASJ,EAAYI,OAE3C,QACE,OAAO,MAINf,EACHQ,EAAaQ,UACbR,EAiCYS,CAAkBpB,EAAiBU,KAAKR,OAEhDmB,EAAiBlB,GAAcC,IAAaT,EAASU,KAE3D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAaT,EAASoB,WAGtCU,QAAS,kBAAM,EAAKnB,WAAWX,EAASoB,WAR1C,iCAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAaT,EAASsB,SAGtCQ,QAAS,kBAAM,EAAKnB,WAAWX,EAASsB,SAR1C,4BAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAASf,KAAKF,mBARhB,qBAaCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,iBAHhB,sBAUJ,cAAC,EAAD,CAAWZ,MAAOA,WAlF1B,GAAyB6B,IAAMC,WExD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.57af9fac.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previousGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previousGood.localeCompare(currentGood);\n\n      case SortType.LENGTH:\n        return previousGood.length - currentGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isResetVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {isResetVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleResetClick}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}