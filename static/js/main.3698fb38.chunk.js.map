{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleLengthSortClick","setState","LENGTH","handleNameSortClick","ALPHABET","handleReverseClick","handleResetClick","this","goods","visibleGoods","sort","previousGood","currentGood","localeCompare","length","reverse","getReorderedGoods","isResetVisible","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,sBAAwB,WACtB,EAAKC,SAAS,CACZH,SAAUL,EAASS,UARzB,EAYEC,oBAAsB,WACpB,EAAKF,SAAS,CACZH,SAAUL,EAASW,YAdzB,EAkBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,iBAAmB,WACjB,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA9DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQd,GACN,KAAKL,EAASW,SACZ,OAAOO,EAAaE,cAAcD,GAEpC,KAAKnB,EAASS,OACZ,OAAOS,EAAaG,OAASF,EAAYE,OAE3C,QACE,OAAO,MAINjB,EACHY,EAAaM,UACbN,EAyCYO,CAAkBtB,EAAiBa,KAAKX,OAEhDqB,EAAiBpB,GAAcC,IAAaL,EAASM,KAE3D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaL,EAASW,WAGtCiB,QAASd,KAAKJ,oBARhB,iCAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaL,EAASS,SAGtCmB,QAASd,KAAKP,sBARhB,4BAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAavB,IAGjBwB,QAASd,KAAKF,mBARhB,qBAaCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,iBAHhB,sBAUJ,6BACE,6BACGE,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA/FrB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3698fb38.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previousGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previousGood.localeCompare(currentGood);\n\n      case SortType.LENGTH:\n        return previousGood.length - currentGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleLengthSortClick = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleNameSortClick = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isResetVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleNameSortClick}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleLengthSortClick}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {isResetVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleResetClick}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}